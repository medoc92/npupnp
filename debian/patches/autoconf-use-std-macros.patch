diff --git a/Makefile.am b/Makefile.am
index 52da203..302ec00 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -4,6 +4,8 @@ ACLOCAL_AMFLAGS = -I m4
 AM_CPPFLAGS = \
 	-I$(srcdir)/inc
 
+AM_CXXFLAGS = -std=c++11
+
 LIBNPUPNP_LIBS=@LIBNPUPNP_LIBS@
 
 npupnpincludedir = $(includedir)/npupnp/upnp
diff --git a/autoconfig.h.in b/autoconfig.h.in
index 9296254..faf0057 100644
--- a/autoconfig.h.in
+++ b/autoconfig.h.in
@@ -39,9 +39,6 @@
 /* Define to 1 if you have the <netinet/in.h> header file. */
 #undef HAVE_NETINET_IN_H
 
-/* Define if you have POSIX threads libraries and header files. */
-#undef HAVE_PTHREAD
-
 /* Define to 1 if you have the <stdint.h> header file. */
 #undef HAVE_STDINT_H
 
@@ -120,10 +117,6 @@
 /* Define to the version of this package. */
 #undef PACKAGE_VERSION
 
-/* Define to necessary symbol if this constant uses a non-standard name on
-   your system. */
-#undef PTHREAD_CREATE_JOINABLE
-
 /* Define to 1 if you have the ANSI C header files. */
 #undef STDC_HEADERS
 
@@ -133,9 +126,6 @@
 /* see upnpconfig.h */
 #undef UPNP_ENABLE_IPV6
 
-/* see upnpconfig.h */
-#undef UPNP_ENABLE_POST_WRITE
-
 /* see upnpconfig.h */
 #undef UPNP_ENABLE_UNSPECIFIED_SERVER
 
diff --git a/configure.ac b/configure.ac
index 52958ac..2335e72 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,11 +1,3 @@
-# -*- Autoconf -*-
-#
-# Top-level configure.ac file for libnpupnp
-#
-# Process this file with autoconf to produce a configure script.
-#
-# (C) Copyright 2005-2007 RÃ©mi Turboult <r3mi@users.sourceforge.net>
-#
 
 AC_PREREQ(2.60)
 
@@ -30,8 +22,8 @@ AC_CONFIG_AUX_DIR([build-aux])
 AC_CONFIG_MACRO_DIR([m4])
 AC_CONFIG_SRCDIR([inc/upnp.h])
 
-
 AM_INIT_AUTOMAKE([1.8 -Wall foreign subdir-objects])
+AM_PROG_AR
 AC_DISABLE_STATIC
 LT_INIT
 
@@ -67,88 +59,88 @@ AC_DEFINE_UNQUOTED([NPUPNP_VERSION_PATCH], $upnppatch, [see upnpconfig.h])
 
 
 
-RT_BOOL_ARG_ENABLE([debug], [yes], [extra debugging code])
-if test "x$enable_debug" = xyes ; then
+AC_ARG_ENABLE([debug], [extra debugging code])
+if test "x$enable_debug" != xno ; then
 	AC_DEFINE(UPNP_HAVE_DEBUG, 1, [see upnpconfig.h])
 	AC_DEFINE(DEBUG, 1, [Define to 1 to compile debug code])
 else
 	AC_DEFINE(NDEBUG, 1, [Define to 1 to prevent compilation of assert()])
 fi
+AM_CONDITIONAL(ENABLE_DEBUG, test x"$enable_debug" != xno)
 
 #
 # Check for libupnp subsets
 #
-RT_BOOL_ARG_ENABLE([client], [yes], [control point code (client)])
-if test "x$enable_client" = xyes ; then
+AC_ARG_ENABLE([client], AC_HELP_STRING([control point code (client)]))
+if test "x$enable_client" != xno ; then
 	AC_DEFINE(UPNP_HAVE_CLIENT, 1, [see upnpconfig.h])
 fi
 
-RT_BOOL_ARG_ENABLE([device], [yes],
-     [device specific code (implies --disable-webserver if disabled)])
-if test "x$enable_device" = xyes ; then
+AC_ARG_ENABLE([device], [device specific code (implies --disable-webserver if disabled)])
+if test "x$enable_device" != xno ; then
 	AC_DEFINE(UPNP_HAVE_DEVICE, 1, [see upnpconfig.h])
 fi
 
 if test "x$enable_device" = xno ; then 
 	enable_webserver=no
 else 
-	RT_BOOL_ARG_ENABLE([webserver], [yes], [integrated web server])
+	AC_ARG_ENABLE([webserver], [integrated web server])
 fi
-AM_CONDITIONAL(ENABLE_WEBSERVER, test x"$enable_webserver" = xyes)
-if test "x$enable_webserver" = xyes ; then
+AM_CONDITIONAL(ENABLE_WEBSERVER, test x"$enable_webserver" != xno)
+if test "x$enable_webserver" != xno ; then
 	AC_DEFINE(UPNP_HAVE_WEBSERVER, 1, [see upnpconfig.h])
 fi
 
-RT_BOOL_ARG_ENABLE([ssdp], [yes], [SSDP part])
-if test "x$enable_ssdp" = xyes ; then
+AC_ARG_ENABLE([ssdp], [SSDP part])
+if test "x$enable_ssdp" != xno ; then
         AC_DEFINE(UPNP_HAVE_SSDP, 1, [see upnpconfig.h])
 fi
+AM_CONDITIONAL(ENABLE_SSDP, test x"$enable_ssdp" != xno)
 
-RT_BOOL_ARG_ENABLE([optssdp], [yes], [optionnal SSDP headers support)])
-if test "x$enable_optssdp" = xyes ; then
+AC_ARG_ENABLE([optssdp], [optionnal SSDP headers support)])
+if test "x$enable_optssdp" != xno ; then
         AC_DEFINE(UPNP_HAVE_OPTSSDP, 1, [see upnpconfig.h])
 	enable_uuid=yes
 fi
 
-RT_BOOL_ARG_ENABLE([soap], [yes], [SOAP part])
-if test "x$enable_soap" = xyes ; then
+AC_ARG_ENABLE([soap], [SOAP part])
+if test "x$enable_soap" != xno ; then
         AC_DEFINE(UPNP_HAVE_SOAP, 1, [see upnpconfig.h])
 fi
+AM_CONDITIONAL(ENABLE_SOAP, test x"$enable_soap" != xno)
 
-RT_BOOL_ARG_ENABLE([gena], [yes], [GENA part])
-if test "x$enable_gena" = xyes ; then
+AC_ARG_ENABLE([gena], [GENA part])
+if test "x$enable_gena" != xno ; then
         AC_DEFINE(UPNP_HAVE_GENA, 1, [see upnpconfig.h])
 	enable_uuid=yes
 fi
+AM_CONDITIONAL(ENABLE_GENA, test x"$enable_gena" != xno)
 
-AM_CONDITIONAL(ENABLE_UUID, test x"$enable_uuid" = xyes)
+AM_CONDITIONAL(ENABLE_UUID, test x"$enable_uuid" != xno)
 
-RT_BOOL_ARG_ENABLE([tools], [yes], [helper APIs in upnptools.h])
-if test "x$enable_tools" = xyes ; then
+AC_ARG_ENABLE([tools], [helper APIs in upnptools.h])
+if test "x$enable_tools" != xno ; then
 	AC_DEFINE(UPNP_HAVE_TOOLS, 1, [see upnpconfig.h])
 fi
+AM_CONDITIONAL(ENABLE_TOOLS, test x"$enable_tools" != xno)
 
-RT_BOOL_ARG_ENABLE([ipv6], [no], [ipv6 support])
+AC_ARG_ENABLE([ipv6], [ipv6 support])
 if test "x$enable_ipv6" = xyes ; then
         AC_DEFINE(UPNP_ENABLE_IPV6, 1, [see upnpconfig.h])
 fi
 
-RT_BOOL_ARG_ENABLE([unspecified_server], [no], [unspecified SERVER header])
+AC_ARG_ENABLE([unspecified_server], [unspecified SERVER header])
 if test "x$enable_unspecified_server" = xyes ; then
         AC_DEFINE(UPNP_ENABLE_UNSPECIFIED_SERVER, 1, [see upnpconfig.h])
 fi
 
-RT_BOOL_ARG_ENABLE([blocking_tcp_connections], [yes], [blocking TCP connections])
-if test "x$enable_blocking_tcp_connections" = xyes ; then
+AC_ARG_ENABLE([blocking_tcp_connections], [blocking TCP connections])
+if test "x$enable_blocking_tcp_connections" != xno ; then
         AC_DEFINE(UPNP_ENABLE_BLOCKING_TCP_CONNECTIONS, 1, [see upnpconfig.h])
 fi
 
-RT_BOOL_ARG_ENABLE([postwrite], [no], [write to the filesystem on otherwise unhandled POST requests])
-if test "x$enable_postwrite" = xyes ; then
-        AC_DEFINE(UPNP_ENABLE_POST_WRITE, 1, [see upnpconfig.h])
-fi
-
-RT_BOOL_ARG_ENABLE([reuseaddr], [no], [bind the miniserver socket with reuseaddr to allow clean restarts])
+AC_ARG_ENABLE([reuseaddr],
+	[bind the miniserver socket with reuseaddr to allow clean restarts])
 if test "x$enable_reuseaddr" = xyes ; then
         AC_DEFINE(UPNP_MINISERVER_REUSEADDR, 1, [see upnpconfig.h])
 fi
@@ -229,33 +221,14 @@ else
 fi
 
 
-#
-# Checks for library functions
-#
 AC_FUNC_VPRINTF
 AC_CHECK_FUNCS([getifaddrs])
-
 # Solaris needs -lsocket -lnsl -lrt
 AC_SEARCH_LIBS([bind],           [socket])
 AC_SEARCH_LIBS([gethostbyname],  [nsl])
 AC_SEARCH_LIBS([sched_getparam], [rt])
+AC_CHECK_LIB([pthread], [pthread_create], [], [])
 
-
-#
-# Checks for POSIX Threads
-#
-echo "---------------------- pthread stuff ------------------------------------"
-ACX_PTHREAD(
-	[],
-	[AC_MSG_ERROR([POSIX threads are required to build this program])])
-#
-# Update environment variables for pthreads
-#
-CC="$PTHREAD_CC"
-CFLAGS="$PTHREAD_CFLAGS $CFLAGS"
-LIBS="$PTHREAD_LIBS $LIBS"
-
-echo "PTHREAD_LIBS $PTHREAD_LIBS"
 #
 # Determine if pthread_rwlock_t is available
 #
